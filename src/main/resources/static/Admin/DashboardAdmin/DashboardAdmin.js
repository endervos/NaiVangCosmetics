document.addEventListener("DOMContentLoaded", () => {
  console.log("Admin page loaded!");

  // Toggle dropdown menu
  const userInfo = document.querySelector(".user-info");
  const dropdown = document.querySelector(".dropdown");

  if (userInfo && dropdown) {
    userInfo.addEventListener("click", () => {
      dropdown.style.display = dropdown.style.display === "block" ? "none" : "block";
    });

    // ƒê√≥ng dropdown khi click ra ngo√†i
    document.addEventListener("click", (e) => {
      if (!userInfo.contains(e.target) && !dropdown.contains(e.target)) {
        dropdown.style.display = "none";
      }
    });
  }

  // Logout icon ngo√†i (ch·ªâ d√πng n·∫øu b·∫°n gi·ªØ icon ri√™ng ngo√†i top-bar)
  const logoutBtn = document.querySelector(".logout-icon");
  if (logoutBtn) {
    logoutBtn.addEventListener("click", () => {
      if (confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t kh√¥ng?")) {
        window.location.href = "/src/main/resources/templates/Customer/Login.html";
      }
    });
  }
});

document.addEventListener("DOMContentLoaded", () => {
  renderLowStock();
});

function renderLowStock(items = [
  { name: 'Serum C 30ml', stock: 12 },
  { name: 'Toner Hoa C√∫c', stock: 5 },
  { name: 'Son Satin #08', stock: 4 },
  { name: 'D·∫ßu g·ªôi 300ml', stock: 27 },
  { name: 'Kem d∆∞·ª°ng ƒë√™m', stock: 3 },
]) {
  const ctx = document.getElementById("mainChart");
  if (!ctx) return console.warn("‚ùå Kh√¥ng t√¨m th·∫•y canvas #mainChart");

  window.mainChart?.destroy?.();

  const low = items
    .filter(i => i.stock <= 10)
    .sort((a, b) => a.stock - b.stock)
    .slice(0, 5);

  // üé® T·∫°o gradient m√†u t·ª´ tr√°i sang ph·∫£i
  const gradient = ctx.getContext("2d").createLinearGradient(0, 0, ctx.width, 0);
  gradient.addColorStop(0, "rgb(91, 33, 182)");   // t√≠m ƒë·∫≠m ƒë·∫ßu
  gradient.addColorStop(1, "rgb(147, 197, 253)"); // xanh nh·∫°t cu·ªëi

  // üîß V·∫Ω bi·ªÉu ƒë·ªì
  window.mainChart = new Chart(ctx, {
    type: 'bar',
    data: {
      labels: low.map(i => i.name),
      datasets: [{
        label: 'T·ªìn kho',
        data: low.map(i => i.stock),
        backgroundColor: gradient, // üí° D√πng gradient
        borderRadius: 0
      }]
    },
    options: {
      indexAxis: 'y',
      plugins: {
        title: {
          display: true,
          font: { size: 18 }
        },
        legend: { display: false }
      },
      scales: {
        x: {
          beginAtZero: true,
          grid: { display: false },
          ticks: { stepSize: 1, precision: 0 }
        },
        y: { grid: { display: false } }
      }
    }
  });
}


const ctxYear = document.getElementById('yearChart').getContext('2d');
new Chart(ctxYear, {
  type: 'line',
  data: {
    labels: ['Th√°ng 1', 'Th√°ng 2', 'Th√°ng 3', 'Th√°ng 4', 'Th√°ng 5', 'Th√°ng 6', 'Th√°ng 7', 'Th√°ng 8', 'Th√°ng 9', 'Th√°ng 10', 'Th√°ng 11', 'Th√°ng 12'],
    datasets: [{
      label: 'Doanh thu (tri·ªáu ‚Ç´)',
      data: [45, 59, 45, 67, 50, 48, 49, 60, 70, 75, 80, 90],
      borderColor: '#36a2eb',
      backgroundColor: 'rgba(54, 162, 235, 0.2)',
      borderWidth: 2,
      fill: true,
      tension: 0.3,
      pointBackgroundColor: '#1d72b8'
    }]
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,  // ‚úÖ m·∫∑c ƒë·ªãnh auto co theo box
    plugins: {
      legend: {
        display: true,
        position: 'bottom'
      },
      title: {
        display: false
      },
      tooltip: {
        enabled: true, // ‚úÖ B·∫≠t tooltip
        mode: 'nearest', // Hi·ªÉn th·ªã gi√° tr·ªã g·∫ßn nh·∫•t ƒëi·ªÉm chu·ªôt
        intersect: false,
        backgroundColor: 'rgba(0,0,0,0.8)',
        titleColor: '#fff',
        bodyColor: '#fff',
        padding: 10,
        callbacks: {
          label: (context) => ` ${context.parsed.y} tri·ªáu ‚Ç´`
    }
  }
    },
    scales: {
      y: {
        beginAtZero: true,
        ticks: { color: '#555' },
        grid: {
          drawOnChartArea: false,
          drawBorder: true,
          drawTicks: false
        }
      },
      x: {
        ticks: { color: '#555' },
        grid: {
          display: false,
          drawBorder: true
        }
      }
    },
  }
});


// Bi·ªÉu ƒë·ªì tr√≤n danh m·ª•c s·∫£n ph·∫©m
const ctxCategory = document.getElementById('categoryChart').getContext('2d');
new Chart(ctxCategory, {
  type: 'doughnut',
  data: {
    labels: ['ChƒÉm s√≥c da m·∫∑t', 'Trang ƒëi·ªÉm', 'ChƒÉm s√≥c c∆° th·ªÉ ', 'ChƒÉm s√≥c t√≥c', 'D∆∞·ª£c m·ªπ ph·∫©m', 'Th·ª±c ph·∫©m ch·ª©c nƒÉng'],
    datasets: [{
      data: [45, 30, 15, 10, 12, 8],
      backgroundColor: ['#2aa198', '#268bd2', '#b58900', '#dc322f', '#6c5ce7', '#FFB347'],
      borderWidth: 0,
      hoverOffset: 10
    }]
  },
  options: {
    responsive: true,
    maintainAspectRatio: true, // ‚úÖ gi·ªØ t·ªâ l·ªá vu√¥ng ƒë·ªÉ tr√≤n ƒë·ªÅu
    aspectRatio: 1,            // ‚úÖ √©p canvas lu√¥n l√† h√¨nh vu√¥ng
    plugins: {
      legend: {
        position: 'bottom',
        align: 'start',
        labels: { color: '#555', boxWidth: 20, padding: 20, }
      },
      title: {
        display: false
      }
    },
    layout: {
      padding: 10
    },
    cutout: '65%' // ‚úÖ ƒëi·ªÅu ch·ªânh ƒë·ªô d√†y v√≤ng (t√πy th√≠ch)
  }
});

const ctxTopProducts = document.getElementById('topProductsChart').getContext('2d');

  new Chart(ctxTopProducts, {
    type: 'bar',
    data: {
      labels: [
        'Serum Vitamin C',
        'Kem D∆∞·ª°ng ·∫®m',
        'S·ªØa R·ª≠a M·∫∑t',
        'Toner Hoa C√∫c',
        'M·∫∑t N·∫° ƒê·∫•t S√©t',
        'Kem Ch·ªëng N·∫Øng',
        'N∆∞·ªõc T·∫©y Trang',
        'Tinh Ch·∫•t Retinol',
        'D·∫ßu G·ªôi Th·∫£o D∆∞·ª£c',
        'Son D∆∞·ª°ng M√¥i'
      ],
      datasets: [{
        label: 'S·ªë l∆∞·ª£ng b√°n',
        data: [500, 350, 480, 335, 670, 900, 580, 665, 700, 440],
        backgroundColor: [
          '#268bd2', '#2aa198', '#b58900', '#dc322f', '#6c5ce7',
          '#FFB347', '#20c997', '#ff7f50', '#9b59b6', '#00bcd4'
        ],
        borderRadius: 0,
        barThickness: 45,          // ‚úÖ c·ªôt to h∆°n
        categoryPercentage: 0.75,  // ‚úÖ gi·∫£m kho·∫£ng c√°ch gi·ªØa c√°c c·ªôt
        barPercentage: 0.9         // ‚úÖ t·ªëi ∆∞u kho·∫£ng c√°ch trong m·ªói nh√≥m
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      scales: {
        x: {
          grid: { display: false, drawBorder: false },
          ticks: { font: { size: 12 }, maxRotation: 40, minRotation: 40 },
          title: { display: false }
        },
        y: {
          grid: { display: false, drawBorder: false },
          beginAtZero: true,
          title: {
            display: true,
            text: 'S·ªë l∆∞·ª£ng b√°n',
            font: { size: 13, weight: 'bold' },
            padding: { bottom: 10, right: 20 }
          },
          ticks: { stepSize: 50 }
        }
      },
      plugins: {
        legend: { display: false },
        title: {
          display: true,
          text: 'TOP 10 S·∫¢N PH·∫®M B√ÅN CH·∫†Y NH·∫§T TRONG TH√ÅNG N√ÄY',
          align: 'center',
          position: 'top', // ‚úÖ cƒÉn gi·ªØa tr√™n c√πng v√πng bi·ªÉu ƒë·ªì
          color: '#000',
          font: { size: 16, weight: 'bold' },
          padding: { top: 10, bottom: 20 }
        },
        tooltip: {
          callbacks: {
            label: (context) => ' ' + context.parsed.y + ' s·∫£n ph·∫©m'
          }
        }
      },
      layout: {
        padding: { top: 20, bottom: 10, left: 10, right: 10 }
      }
    }
  });


// ==========================
// ICON T∆Ø∆†NG ·ª®NG THEO TH·ª® H·∫†NG (D√ôNG CHUNG)
// ==========================
const medalIcons = {
  gold: "Image/top1.png",
  silver: "Image/top2.png",
  bronze: "Image/top3.png",
};

/* =========================================================
   TOP 3 TH√ÅNG
========================================================= */
const topMonthData = [
  { name: "L·∫°i Th·ªã Thanh Hi·ªÅn", amount: 12_500_000, image: "https://i.pravatar.cc/150?img=5" },
  { name: "ƒê·ªó T·∫•n H∆∞ng",       amount: 9_700_000,  image: "https://i.pravatar.cc/150?img=12" },
  { name: "Nguy·ªÖn Th·ªã Lam Thuy√™n", amount: 8_600_000, image: "https://i.pravatar.cc/150?img=45" },
  { name: "Ph·∫°m Gia D",        amount: 7_000_000,  image: "https://i.pravatar.cc/150?img=20" },
];

/* Build top 3 + g√°n m√†u theo h·∫°ng */
function buildTop3(data){
  const sorted = [...data].sort((a,b)=>b.amount-a.amount).slice(0,3);
  const colors = ["gold","silver","bronze"];
  sorted.forEach((u,i)=>u.color = colors[i] || "bronze");
  return sorted;
}

/* RENDER TH√ÅNG (2nd - 1st - 3rd, KH√îNG NH√ÉN 1st/2nd/3rd) */
function renderMonthTop3(){
  const container = document.getElementById("leaderboard");
  if(!container) return;
  container.innerHTML = "";

  const top3 = buildTop3(topMonthData);
  [top3[1], top3[0], top3[2]].forEach(user=>{
    const div = document.createElement("div");
    div.className = `rank ${user.color}`;
    div.innerHTML = `
      <img src="${medalIcons[user.color]}" alt="medal" class="medal-icon">
      <div class="avatar"><img src="${user.image}" alt="${user.name}"></div>
      <p class="name">${user.name}</p>
      <div class="amount">Chi ti√™u: ${user.amount.toLocaleString("vi-VN")}‚Ç´</div>
    `;
    container.appendChild(div);
  });
}

/* =========================================================
   TOP 3 NƒÇM
========================================================= */
const topYearData = [
  { name: "Tr·∫ßn Ph√∫c Ti·∫øn",        amount: 117_000_000, image: "https://randomuser.me/api/portraits/men/64.jpg",   color: "silver" },
  { name: "Tr·∫ßn Th·ªã √Ånh Nguy·ªát",   amount: 129_000_000, image: "https://randomuser.me/api/portraits/women/68.jpg", color: "gold" },
  { name: "L·∫°i Th·ªã Thanh Hi·ªÅn",    amount: 98_000_000,  image: "https://randomuser.me/api/portraits/men/75.jpg",   color: "bronze" },
];

function renderYearTop3() {
  const container = document.getElementById("topYear");
  if (!container) return;

  container.innerHTML = "";

  // d·ªØ li·ªáu nƒÉm ƒë√£ c√≥ s·∫µn color, ch·ªâ c·∫ßn b√†y theo 2nd - 1st - 3rd
  [topYearData[0], topYearData[1], topYearData[2]].forEach((user) => {
    const div = document.createElement("div");
    div.classList.add("rank", user.color);
    div.innerHTML = `
      <img src="${medalIcons[user.color]}" alt="medal" class="medal-icon">
      <div class="avatar"><img src="${user.image}" alt="${user.name}"></div>
      <p class="name">${user.name}</p>
      <div class="amount">Chi ti√™u: ${user.amount.toLocaleString("vi-VN")}ƒë</div>
    `;
    container.appendChild(div);
  });
}

/* =========================================================
   G·ªåI H√ÄM
========================================================= */
renderMonthTop3();
renderYearTop3();
