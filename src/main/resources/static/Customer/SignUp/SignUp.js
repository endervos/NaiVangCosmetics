document.addEventListener("DOMContentLoaded", function () {
    const container = document.querySelector(".account-info");
    if (!container) return;

    const updateBtn = container.querySelector(".btn"); // N√∫t "C·∫≠p nh·∫≠t th√¥ng tin"
    const fullnameInput = container.querySelector('[th\\:field="*{fullname}"]');
    const phoneInput = container.querySelector('[th\\:field="*{phoneNumber}"]');
    const emailInput = container.querySelector('[th\\:field="*{email}"]');
    const birthdayInput = container.querySelector('[th\\:field="*{birthday}"]');
    const genderInputs = container.querySelectorAll('input[th\\:field="*{gender}"]');
    const addressInputs = container.querySelectorAll(".address-input");

    // üîπ Regex chu·∫©n
    const namePattern = /^[A-Za-z√Ä-·ªπ√†-·ªπƒêƒë\s'-]{2,50}$/;
    const phonePattern = /^(0[3|5|7|8|9])[0-9]{8}$/;
    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
    const addressPattern = /^[A-Za-z√Ä-·ªπ√†-·ªπƒêƒë0-9\s,./()-]{5,100}$/; // cho ph√©p k√Ω t·ª± th√¥ng th∆∞·ªùng v√† , . / ( ) -

    // üîπ H√†m hi·ªÉn th·ªã l·ªói (t·ª± th√™m .error n·∫øu thi·∫øu)
    function showError(element, message) {
        let err = element.nextElementSibling;
        if (!err || !err.classList.contains("error")) {
            err = document.createElement("div");
            err.classList.add("error");
            err.style.color = "red";
            err.style.fontSize = "14px";
            err.style.marginTop = "4px";
            element.insertAdjacentElement("afterend", err);
        }
        err.textContent = message;
    }

    // üîπ Reset l·ªói
    function clearErrors() {
        container.querySelectorAll(".error").forEach(e => e.textContent = "");
    }

    // üîπ B·∫Øt s·ª± ki·ªán click n√∫t c·∫≠p nh·∫≠t
    updateBtn.addEventListener("click", function (e) {
        e.preventDefault();
        clearErrors();
        let isValid = true;

        // ===== H·ªç v√† t√™n =====
        const fullname = fullnameInput.value.trim();
        if (fullname === "") {
            showError(fullnameInput, "H·ªç v√† t√™n kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng");
            isValid = false;
        } else if (!namePattern.test(fullname)) {
            showError(fullnameInput, "H·ªç t√™n ch·ªâ ƒë∆∞·ª£c ch·ª©a ch·ªØ c√°i v√† d·∫•u c√°ch");
            isValid = false;
        } else {
            fullnameInput.value = fullname
                .toLowerCase()
                .replace(/(^|\s)\S/g, l => l.toUpperCase());
        }

        // ===== S·ªë ƒëi·ªán tho·∫°i =====
        const phone = phoneInput.value.trim();
        if (phone === "") {
            showError(phoneInput, "S·ªë ƒëi·ªán tho·∫°i kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng");
            isValid = false;
        } else if (!phonePattern.test(phone)) {
            showError(phoneInput, "S·ªë ƒëi·ªán tho·∫°i ph·∫£i g·ªìm 10 s·ªë v√† b·∫Øt ƒë·∫ßu b·∫±ng 03, 05, 07, 08 ho·∫∑c 09");
            isValid = false;
        }

        // ===== Email =====
        const email = emailInput.value.trim();
        if (email === "") {
            showError(emailInput, "Email kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng");
            isValid = false;
        } else if (!emailPattern.test(email)) {
            showError(emailInput, "Email kh√¥ng h·ª£p l·ªá");
            isValid = false;
        }

        // ===== Ng√†y sinh =====
        const birthday = birthdayInput.value.trim();
        if (birthday === "") {
            showError(birthdayInput, "Ng√†y sinh kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng");
            isValid = false;
        } else {
            const dob = new Date(birthday);
            const today = new Date();
            if (dob >= today) {
                showError(birthdayInput, "Ng√†y sinh ph·∫£i l√† ng√†y trong qu√° kh·ª©");
                isValid = false;
            }
        }

        // ===== Gi·ªõi t√≠nh =====
        const genderChecked = Array.from(genderInputs).some(g => g.checked);
        if (!genderChecked) {
            const genderDiv = container.querySelector(".gender-container");
            showError(genderDiv, "Vui l√≤ng ch·ªçn gi·ªõi t√≠nh");
            isValid = false;
        }

        // ===== ƒê·ªãa ch·ªâ =====
        const addressList = container.querySelectorAll(".address-input");
        if (addressList.length === 0) {
            alert("B·∫°n c·∫ßn nh·∫≠p √≠t nh·∫•t 1 ƒë·ªãa ch·ªâ!");
            isValid = false;
        } else {
            addressList.forEach((input, idx) => {
                const val = input.value.trim();
                if (val === "") {
                    showError(input, `ƒê·ªãa ch·ªâ ${idx + 1} kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng`);
                    isValid = false;
                } else if (!addressPattern.test(val)) {
                    showError(input, `ƒê·ªãa ch·ªâ ${idx + 1} ch·ª©a k√Ω t·ª± kh√¥ng h·ª£p l·ªá (ch·ªâ cho ph√©p ch·ªØ, s·ªë, ',', '.', '/', '-')`);
                    isValid = false;
                }
            });
        }

        // N·∫øu t·∫•t c·∫£ h·ª£p l·ªá
        if (isValid) {
            alert("‚úÖ T·∫•t c·∫£ th√¥ng tin h·ª£p l·ªá ‚Äî ti·∫øn h√†nh g·ª≠i v·ªÅ server!");
            // TODO: G·ªçi API ho·∫∑c submit form th·∫≠t:
            // document.querySelector("form").submit();
        }
    });
});
